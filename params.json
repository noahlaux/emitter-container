{"name":"Pieces.js","tagline":"pieces.js is a small modular library (7KB) that spawn emitters and other goodness.","body":"# PIECES.JS\r\npieces.js is a small modular library (7KB) that spawn emitters and other goodness.\r\n\r\n---\r\n\r\n## Example\r\n\r\nCheck `example.html` in root folder for a demontration.\r\n\r\n---\r\n\r\n## Packaged Builds\r\nThe easiest way to use `pieces.js` in your code is by using the built source at `dist/pieces.min.js`. These built JavaScript files bundle all the necessary dependencies to run pieces.js.\r\n\r\nIn your `head` tag, include the following code:\r\n```html\r\n<script type=\"text/javascript\" src=\"pieces.min.js\"></script>\r\n```\r\n\r\n----\r\n\r\n## EmitterElement\r\n\r\nAn `EmitterElement` is used to bind an emitter to a HTML element, making the emitter track the position of your HTML element and follow along. This is quite powerful and very easy to do:\r\n\r\n```html\r\n<!-- Element to be tracked -->\r\n<div id=\"smokeMachine\"></div>\r\n\r\n<script>\r\n    // Reference to element\r\n    var element = document.getElementById('smokeMachine');\r\n\r\n    // create emitter element with default settings\r\n    var emitterElement = new pieces.EmitterElement(element);\r\n</script>\r\n```\r\n\r\nFrom now on the emitter tracks the position of the HTML element `smokeMachine` and will follow it around on your screen!\r\n\r\nYou can also provide additional options for your emitter by passing in some options\r\n```html\r\n<!-- Element to be tracked -->\r\n<div id=\"smokeMachine\"></div>\r\n\r\n<script>\r\n    // Reference to element\r\n    var element = document.getElementById('smokeMachine');\r\n\r\n    // create emitter element with options\r\n    var emitterElement = new pieces.EmitterElement(element, {\r\n        endSize: 100,\r\n        velocityX: 4\r\n    });\r\n</script>\r\n```\r\n\r\n## Emitter\r\nAn emitters job is to spawn particles. This is useful to create illusions of fx smoke, fire, water, stars etc.\r\n\r\nCreating an emitter in pieces.js is easy\r\n```js\r\nvar emitter = new pieces.Emitter();\r\n```\r\nThis creates an emitter that imidiatly starts emitting smoke in the top left corner of your screen. The emitter has some sensible default settings and have an base64 smoke asset embedded.\r\n\r\nThere's quite a few options to control the appearence of your emitter. Let's make a smoke hurricane for the fun of it:\r\n```js\r\n// smoke hurricane\r\nvar smokeHurricane = new pieces.Emitter({\r\n    rotationSpeed: 5,\r\n    spawnInterval: 20,\r\n    growFactor: 0.3\r\n});\r\n```\r\n\r\nIf you want to go completely crazy there's also filters (`desaturate`, `colorize`, `tint`) that you can color your particle asset. You use them like this:\r\n```js\r\n// Green dense smoke\r\nvar smokeHurricane = new pieces.Emitter({\r\n    growFactor: 5\r\n    filters: {\r\n        colorize: {\r\n            // RGB colors\r\n            colors: [0, 255, 0]\r\n            // opacity of filter\r\n            strength: 1\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n### Emitter options\r\n```js\r\nvar defaults = {\r\n    /**\r\n     * Time between emitter spawns\r\n     * @type {Number}\r\n     */\r\n    spawnInterval: 40,\r\n\r\n    /**\r\n     * Indicates if emitter should spawn particles\r\n     * @type {Boolean}\r\n     */\r\n    paused: false,\r\n\r\n    /**\r\n     * Max life time for particle to live (in ms)\r\n     * @type {Number}\r\n     */\r\n    maxLifeTime: 5000,\r\n\r\n    /**\r\n     * Current size of particle\r\n     * @type {Number}\r\n     */\r\n    size: 0,\r\n\r\n    /**\r\n     * Initial and current life time of particle\r\n     * @type {Number}\r\n     */\r\n    lifeTime: 0,\r\n\r\n    /**\r\n     * Start size of particle\r\n     * @type {Number}\r\n     */\r\n    startSize: 30,\r\n\r\n    /**\r\n     * End size of particle\r\n     * @type {Number}\r\n     */\r\n    endSize: 70,\r\n\r\n    /**\r\n     * Grow factor for particle\r\n     * @type {Number}\r\n     */\r\n    growFactor: 0.1,\r\n\r\n    /**\r\n     * Current horizontal position for particle\r\n     * @type {Number}\r\n     */\r\n    positionX: 0,\r\n\r\n    /**\r\n     * Current vertical position for particle\r\n     * @type {Number}\r\n     */\r\n    positionY: 0,\r\n\r\n    /**\r\n     * Current horizontal particle velocity\r\n     * @type {Number}\r\n     */\r\n    velocityX: 1,\r\n\r\n    /**\r\n     * Adds randomness to horizontal particle velocity\r\n     * @type {Number}\r\n     */\r\n    velocityXRandomFactor: 0.5,\r\n\r\n    /**\r\n     * Current vertical velocity\r\n     * @type {Number}\r\n     */\r\n    velocityY: 1,\r\n\r\n    /**\r\n     * Adds randomness to vertical particle velocity\r\n     * @type {Number}\r\n     */\r\n    velocityYRandomFactor: 3,\r\n\r\n    /**\r\n     * Rotation span for particle\r\n     * @type {Number}\r\n     */\r\n    rotationAngleSpan: 180,\r\n\r\n    /**\r\n     * Rotation speed of particle\r\n     * @type {Number}\r\n     */\r\n    rotationSpeed: 0.2,\r\n\r\n    /**\r\n     * Start opacity of the particle\r\n     * @type {Number}\r\n     */\r\n    startOpacity: 1,\r\n\r\n    /**\r\n     * Decline speed for opacity\r\n     * @type {Number}\r\n     */\r\n    opacityDeclineSpeed: 0.01,\r\n\r\n    /**\r\n     * Filters to apply to asset\r\n     * @type {Object}\r\n     */\r\n    filters: {},\r\n\r\n    /**\r\n     * Image to use for asset\r\n     * @type {String}\r\n     */\r\n    image: '',\r\n\r\n    /**\r\n     * Render used for particles\r\n     * @type {String}\r\n     */\r\n    render: 'canvas',\r\n\r\n    /**\r\n     * Particle prototype\r\n     * @type {String}\r\n     */\r\n    particleName: 'standard'\r\n};\r\n```\r\n\r\n# Building pieces.js from sources\r\n\r\nIf you prefer to build the library yourself:\r\n\r\nClone the repo from GitHub\r\n\r\n```\r\ngit clone git@github.com:noahlaux/pieces.js.git\r\ncd pieces\r\n```\r\n\r\nAcquire build dependencies. Make sure you have Node.js installed on your workstation. This is only needed to build pieces.js from sources. pieces.js itself has no dependency on Node.js once it is built (it works with any server technology or none). Now run:\r\n```\r\nnpm install -g gulp\r\nnpm install\r\n```\r\n\r\nThe first npm command sets up the popular gylp build tool. You might need to run this command with sudo if you're on Linux or Mac OS X, or in an Administrator command prompt on Windows. The second npm command fetches the remaining build dependencies.\r\n\r\nRun the build tool\r\n\r\n`gylp`\r\n\r\nNow you'll find the built files `pieces.js` & `pieces.min.js` in the `dist` folder.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}